#
#Mongodb client configuration
#
#Target database
database=mttk_as2
#Authentication
auth.userName=admin
auth.password=123456
auth.database=admin
#Server,支持通过逗号分隔的多个服务器列表
servers=localhost:27017
#options
#Refer to com.mongodb.MongoClientOptions.Builder @ http://mongodb.github.io/mongo-java-driver/3.6/javadoc/  
option.applicationName=MTTK API management
option.compressorList=snappy,zlib
option.connectionsPerHost=1000
option.minConnectionsPerHost=10

#MongDB Client请求查询数据，需要包括五个阶段：
#1.MongoDB Client需要找到可用的MongoDB Server
#2.MongoDB Client需要和MongoDB Server建立（new）Connection
#3.应用程序处理线程从Connection Pool中获取Connection
#4.数据传输（获取连接后，进行Socket通信，获取数据）
#5.断开Collection
#( 1000 * 30)对应第1个环节，即MongoDB Client需要找到可用的MongoDB Server所需要的等待时间,MongDB部署的生产一般由多个服务器组成，要么作为一个复制集或者作为一个分片集群，参数serverSelectionTimeout的值即为多长时间内找不到合适服务器时候就决定放弃的时间间隔；
#option.serverSelectionTimeout=30000
#(1000*10)对应第2个环节，每次创建Connection，对应的网络等待。单位毫秒数, 0表示没有限制；
option.connectTimeout=60000
#(1000 * 60 * 2)对应第3个环节，应用程序处理线程从连接池中获取Collection，对应的网络等待时间。单位毫秒数，0表示不等待，负数表示等待时间不确定；
option.maxWaitTime=120000
#(0)对应第4个环节，获取Connection后，就有了Socket通信，获取数据，即在MonogoDB Client和MonogoDB Server的Socket通信过程中的网络等待时间。单位毫秒数，默认配置为0，也就是没有限制
option.socketTimeout=0

#option.maxConnectionIdleTime=0
#option.maxConnectionLifeTime

#option.heartbeatConnectTimeout=20000
#option.heartbeatSocketTimeout=20000
#option.minHeartbeatFrequency=500

#option.sslEnabled=false
#option.sslInvalidHostNameAllowed=false